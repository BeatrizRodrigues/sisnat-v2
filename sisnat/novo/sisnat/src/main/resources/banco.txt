CREATE SEQUENCE TB_MOTIVO_SEQ INCREMENT 1 START 1 NO CYCLE;
CREATE SEQUENCE TB_PROCEDENCIA_SEQ INCREMENT 1 START 1 NO CYCLE;
CREATE SEQUENCE TB_STATUS_ANIMAL_SEQ INCREMENT 1 START 1 NO CYCLE;
CREATE SEQUENCE TB_NOME_CIENTIFICO_SEQ INCREMENT 1 START 1 NO CYCLE;
CREATE SEQUENCE TB_NOME_POPULAR_SEQ INCREMENT 1 START 1 NO CYCLE;
CREATE SEQUENCE TB_ANIMAL_SEQ INCREMENT 1 START 1 NO CYCLE;
CREATE SEQUENCE TB_ALIMENTACAO_SEQ INCREMENT 1 START 1 NO CYCLE;
CREATE SEQUENCE TB_ATENDIMENTO_SEQ INCREMENT 1 START 1 NO CYCLE;
CREATE SEQUENCE TB_DIARIO_SEQ INCREMENT 1 START 1 NO CYCLE;
CREATE SEQUENCE TB_ECDISE_SEQ INCREMENT 1 START 1 NO CYCLE;
CREATE SEQUENCE TB_MORFOMETRIA_AMPHIBIA_SEQ INCREMENT 1 START 1 NO CYCLE;
CREATE SEQUENCE TB_MORFOMETRIA_ARACHNIDA_SEQ INCREMENT 1 START 1 NO CYCLE;
CREATE SEQUENCE TB_MORFOMETRIA_AVES_SEQ INCREMENT 1 START 1 NO CYCLE;
CREATE SEQUENCE TB_MORFOMETRIA_MAMMALIA_SEQ INCREMENT 1 START 1 NO CYCLE;
CREATE SEQUENCE TB_MORFOMETRIA_REPTILIA_SEQ INCREMENT 1 START 1 NO CYCLE;

CREATE TABLE TB_MOTIVO (
 	MOTIVO_ID DEC(18, 0) CONSTRAINT PK_ID_MOTIVO PRIMARY KEY,
	MOTIVO VARCHAR(100) NOT NULL
);

CREATE TABLE TB_STATUS_ANIMAL (
 	STATUS_ANIMAL_ID DEC(18, 0) CONSTRAINT PK_ID_STATUS_ANIMAL PRIMARY KEY,
	STATUS_ANIMAL VARCHAR(100) NOT NULL
);

CREATE TABLE TB_PROCEDENCIA (
 	PROCEDENCIA_ID DEC(18, 0) CONSTRAINT PK_ID_PROCEDENCIA PRIMARY KEY,
	PROCEDENCIA VARCHAR(100) NOT NULL
);

CREATE TABLE TB_NOME_CIENTIFICO (
 	NOME_CIENTIFICO_ID DEC(18, 0) CONSTRAINT PK_ID_NOME_CIENTIFICO PRIMARY KEY,
	NOME_CIENTIFICO VARCHAR(100) NOT NULL
);

CREATE TABLE TB_NOME_POPULAR (
 	NOME_POPULAR_ID DEC(18, 0) CONSTRAINT PK_ID_NOME_POPULAR PRIMARY KEY,
	NOME_POPULAR VARCHAR(100) NOT NULL,
	NOME_CIENTIFICO DEC(18, 0) NOT NULL,
	FOREIGN KEY (NOME_CIENTIFICO) REFERENCES TB_NOME_CIENTIFICO (NOME_CIENTIFICO_ID) ON DELETE CASCADE
);

CREATE TABLE TB_ANIMAL (
 	ANIMAL_ID DEC(18, 0) CONSTRAINT PK_ID_ANIMAL PRIMARY KEY,
	CLASSE VARCHAR(10) NOT NULL, 
	NOME_CIENTIFICO DEC(18, 0) NOT NULL,
	NOME_POPULAR DEC(18, 0) NOT NULL,
	STATUS_ANIMAL DEC(18, 0) NOT NULL,
	SEXO VARCHAR(5) NOT NULL, 
	FAIXA_ETARIA VARCHAR(10) NOT NULL, 
	CONDICAO_FISICA VARCHAR(10) NOT NULL,
	PROCEDENCIA DEC(18, 0) NOT NULL,
	MOTIVO DEC(18, 0)NOT NULL,
	B_O VARCHAR(50),
	MUNICIPIO_ORIGEM VARCHAR(15) NOT NULL,
	ENDERECO VARCHAR(30),
	COORDENADAS VARCHAR(30),
	NOME_DOADOR VARCHAR(50),
	TELEFONE VARCHAR(11),
	AREA_RESGATE VARCHAR(10) NOT NULL,
	DATA_ENTRADA date  NOT NULL,
	DATA_NASCIMENTO date,
	OBSERVACAO VARCHAR(100),
	STATUS_CADASTRO VARCHAR(1) NOT NULL,
	FOREIGN KEY (NOME_CIENTIFICO) REFERENCES TB_NOME_CIENTIFICO (NOME_CIENTIFICO_ID) ON DELETE CASCADE,
	FOREIGN KEY (NOME_POPULAR) REFERENCES TB_NOME_POPULAR (NOME_POPULAR_ID) ON DELETE CASCADE,
	FOREIGN KEY (STATUS_ANIMAL) REFERENCES TB_STATUS_ANIMAL (STATUS_ANIMAL_ID) ON DELETE CASCADE,
	FOREIGN KEY (PROCEDENCIA) REFERENCES TB_PROCEDENCIA (PROCEDENCIA_ID) ON DELETE CASCADE,
	FOREIGN KEY (MOTIVO) REFERENCES TB_MOTIVO (MOTIVO_ID) ON DELETE CASCADE
);

CREATE TABLE TB_ALIMENTACAO (
 	ID_ALIMENTACAO DEC(18, 0) CONSTRAINT PK_ID_ALIMENTACAO PRIMARY KEY,
	ALIMENTO VARCHAR(30) NOT NULL, 
	QUANTIDADE DEC(18,2) NOT NULL, 
 	ANIMAL DEC(18, 0) NOT NULL,
 	DATA_ALIMENTACAO date  NOT NULL,
	FOREIGN KEY (ANIMAL) REFERENCES TB_ANIMAL (ANIMAL_ID) ON DELETE CASCADE
);

CREATE TABLE TB_ATENDIMENTO (
 	ATENDIMENTO_ID DEC(18, 0) CONSTRAINT PK_ID_ATENDIMENTO PRIMARY KEY,
	PROCEDIMENTO VARCHAR(50) NOT NULL,
 	ANIMAL DEC(18, 0) NOT NULL,
 	DATA_PROCEDIMENTO date NOT NULL,
	FOREIGN KEY (ANIMAL) REFERENCES TB_ANIMAL (ANIMAL_ID) ON DELETE CASCADE
);

CREATE TABLE TB_DIARIO (
 	DIARIO_ID DEC(18, 0) CONSTRAINT PK_ID_DIARIO PRIMARY KEY,
	OBSERVACAO VARCHAR(50) NOT NULL,
 	ANIMAL DEC(18, 0) NOT NULL,
 	DATA_DIARIO date  NOT NULL,
	FOREIGN KEY (ANIMAL) REFERENCES TB_ANIMAL (ANIMAL_ID) ON DELETE CASCADE
);

CREATE TABLE TB_ECDISE (
 	ECDISE_ID DEC(18, 0) CONSTRAINT PK_ID_ECDISE PRIMARY KEY,
	ECDISE VARCHAR(50) NOT NULL,
 	ANIMAL DEC(18, 0) NOT NULL,
 	DATA_ECDISE date  NOT NULL,
	FOREIGN KEY (ANIMAL) REFERENCES TB_ANIMAL (ANIMAL_ID) ON DELETE CASCADE
);

CREATE TABLE TB_MORFOMETRIA_AMPHIBIA (
 	MORF_AMPHIBIA_ID DEC(18, 0) CONSTRAINT PK_ID_MORF_AMPH PRIMARY KEY,
	PESO DEC(18, 3) NOT NULL,
	CRC DEC(18, 3) NOT NULL,
	CC DEC(18, 3) NOT NULL,
	DON DEC(18, 3) NOT NULL,
	CF DEC(18, 3) NOT NULL,
	CT DEC(18, 3) NOT NULL,
	CTA DEC(18, 3) NOT NULL,
	CP DEC(18, 3) NOT NULL,
	OBSERVACAO VARCHAR(50) NOT NULL,
 	ANIMAL DEC(18, 0) NOT NULL,
 	DATA_MORF date  NOT NULL,
	FOREIGN KEY (ANIMAL) REFERENCES TB_ANIMAL (ANIMAL_ID) ON DELETE CASCADE
);

CREATE TABLE TB_MORFOMETRIA_ARACHNIDA (
 	MORF_ARACHNIDA_ID DEC(18, 0) CONSTRAINT PK_ID_MORF_ARACH PRIMARY KEY,
	PESO DEC(18, 3) NOT NULL,
	CC DEC(18, 3) NOT NULL,
	CP DEC(18, 3) NOT NULL,
	CPP DEC(18, 3) NOT NULL,
	OBSERVACAO VARCHAR(50) NOT NULL,
 	ANIMAL DEC(18, 0) NOT NULL,
 	DATA_MORF date  NOT NULL,
	FOREIGN KEY (ANIMAL) REFERENCES TB_ANIMAL (ANIMAL_ID) ON DELETE CASCADE
);

CREATE TABLE TB_MORFOMETRIA_AVES (
 	MORF_AVES_ID DEC(18, 0) CONSTRAINT PK_ID_MORF_AVE PRIMARY KEY,
	PESO DEC(18, 3) NOT NULL,
	CB DEC(18, 3) NOT NULL,
	H DEC(18, 3) NOT NULL,
	CC DEC(18, 3) NOT NULL,
	CA DEC(18, 3) NOT NULL,
	CT DEC(18, 3) NOT NULL,
	OBSERVACAO VARCHAR(50) NOT NULL,
 	ANIMAL DEC(18, 0) NOT NULL,
 	DATA_MORF date  NOT NULL,
	FOREIGN KEY (ANIMAL) REFERENCES TB_ANIMAL (ANIMAL_ID) ON DELETE CASCADE
);

CREATE TABLE TB_MORFOMETRIA_MAMMALIA (
 	MORF_MAMMALIA_ID DEC(18, 0) CONSTRAINT PK_ID_MORF_MAMMALIA PRIMARY KEY,
	PESO DEC(18, 3) NOT NULL,
	CRA DEC(18, 3) NOT NULL,
	CC DEC(18, 3) NOT NULL,
	CM DEC(18, 3) NOT NULL,
	CP DEC(18, 3) NOT NULL,
	HO DEC(18, 3) NOT NULL,
	OBSERVACAO VARCHAR(50) NOT NULL,
 	ANIMAL DEC(18, 0) NOT NULL,
 	DATA_MORF date  NOT NULL,
	FOREIGN KEY (ANIMAL) REFERENCES TB_ANIMAL (ANIMAL_ID) ON DELETE CASCADE
);

CREATE TABLE TB_MORFOMETRIA_REPTILIA (
 	MORF_REPTILIA_ID DEC(18, 0) CONSTRAINT PK_ID_MORF_REPT PRIMARY KEY,
	PESO DEC(18, 3) NOT NULL,
	CRC DEC(18, 3) NOT NULL,
	OBSERVACAO VARCHAR(50) NOT NULL,
 	ANIMAL DEC(18, 0) NOT NULL,
 	DATA_MORF date  NOT NULL,
	FOREIGN KEY (ANIMAL) REFERENCES TB_ANIMAL (ANIMAL_ID) ON DELETE CASCADE
);


